{"version":3,"file":"js/175.e8c4b66f.js","mappings":"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","sources":["webpack://web-shop/./src/views/AdminView.vue","webpack://web-shop/./node_modules/@kurkle/color/dist/color.esm.js","webpack://web-shop/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://web-shop/./node_modules/chart.js/dist/chart.js","webpack://web-shop/./node_modules/vue-chartjs/dist/index.js","webpack://web-shop/./src/views/AdminView.vue?e347"],"sourcesContent":["<template>\r\n  <div class=\"user-container\">\r\n    <div class=\"grid\">\r\n      <div class=\"dashboard\">\r\n        <div class=\"dashboard-avt\"\r\n            @click=\"goToUser\">\r\n          <img\r\n            :src=\"this.urlbe + '/file/' + user.avatarUrl\"\r\n            alt=\"\"\r\n            class=\"item-img\"\r\n            v-if=\"user.avatarUrl != null\"\r\n            @click=\"goToUser\"\r\n          />\r\n          <img\r\n            src=\"../assets/images/people/143086968_2856368904622192_1959732218791162458_n.png\"\r\n            alt=\"\"\r\n            class=\"item-img\"\r\n            v-if=\"user.avatarUrl == null\"\r\n          />\r\n          Hello, {{ user.username }}\r\n        </div>\r\n        <div\r\n          class=\"dashboard-item\"\r\n          @click=\"dashboardItemSelect(1, this.urlbe + '/product/list?')\"\r\n          :class=\"{ 'dashboard-item__active': dashboardSelect == 1 }\"\r\n        >\r\n          <font-awesome-icon :icon=\"['fas', 'user']\" />Quản lý\r\n        </div>\r\n        <div\r\n          class=\"dashboard-item\"\r\n          @click=\"dashboardItemSelect(2, this.urlbe + '/product/list?')\"\r\n          :class=\"{ 'dashboard-item__active': dashboardSelect == 2 }\"\r\n        >\r\n          <font-awesome-icon :icon=\"['fas', 'bag-shopping']\" /> Sản phẩm\r\n        </div>\r\n        <div\r\n          class=\"dashboard-item\"\r\n          @click=\"dashboardItemSelect(3, this.urlbe + '/product/list?')\"\r\n          :class=\"{ 'dashboard-item__active': dashboardSelect == 3 }\"\r\n        >\r\n          <font-awesome-icon :icon=\"['fas', 'bars']\" />Danh mục\r\n        </div>\r\n        <div\r\n          class=\"dashboard-item\"\r\n          @click=\"dashboardItemSelect(4, this.urlbe + '/order/list?')\"\r\n          :class=\"{ 'dashboard-item__active': dashboardSelect == 4 }\"\r\n        >\r\n          <font-awesome-icon :icon=\"['fas', 'credit-card']\" />Đơn hàng\r\n        </div>\r\n        <div\r\n          class=\"dashboard-item\"\r\n          @click=\"dashboardItemSelect(5, this.urlbe + '/user/list?')\"\r\n          :class=\"{ 'dashboard-item__active': dashboardSelect == 5 }\"\r\n        >\r\n          <font-awesome-icon :icon=\"['fas', 'users']\" />Tài khoản\r\n        </div>\r\n        <div class=\"dashboard-item\" @click=\"logout\">\r\n          <font-awesome-icon :icon=\"['fas', 'right-from-bracket']\" />Đăng xuất\r\n        </div>\r\n      </div>\r\n      <div class=\"dashboard-content\">\r\n        <h1>Dashboard</h1>\r\n        <div class=\"dashboard-content__maneger\" v-if=\"dashboardSelect == 1\">\r\n          <div style=\"font-size: 30px; font-weight: 500\">Thống kê</div>\r\n          <div class=\"dashboard-content__list\">\r\n            <div\r\n              class=\"dashboard-content__item\"\r\n              style=\"border-left: 5px solid red\"\r\n              v-if=\"products\"\r\n            >\r\n              Sản phẩm: {{ products.totalElements }}\r\n            </div>\r\n            <div\r\n              class=\"dashboard-content__item\"\r\n              style=\"border-left: 5px solid #00b7ff\"\r\n            >\r\n              Danh mục: {{ categories.length }}\r\n            </div>\r\n            <div\r\n              class=\"dashboard-content__item\"\r\n              style=\"border-left: 5px solid yellow\"\r\n              v-if=\"order\"\r\n            >\r\n              Đơn hàng: {{ order.totalElements }}\r\n            </div>\r\n            <div\r\n              class=\"dashboard-content__item\"\r\n              style=\"border-left: 5px solid #00ff44\"\r\n              v-if=\"users\"\r\n            >\r\n              Tài khoản: {{ users.totalElements }}\r\n            </div>\r\n          </div>\r\n          <div class=\"dashboard-evaluate\">\r\n            <div class=\"chart\">\r\n              <Bar\r\n                id=\"my-chart-id\"\r\n                :options=\"chartOptions\"\r\n                :data=\"chartData\"\r\n                v-if=\"updateChart\"\r\n              />\r\n              <button\r\n                @click=\"getChart\"\r\n                class=\"btn__update-chart\"\r\n                v-if=\"!updateChart\"\r\n              >\r\n                Lấy dữ liệu biểu đồ doanh thu năm\r\n              </button>\r\n              <input type=\"number\" v-model=\"currentYear\" v-if=\"!updateChart\" />\r\n            </div>\r\n            <div class=\"sales\">\r\n              <div>Tổng doanh thu:</div>\r\n              {{ formatPrice(totalPrice) }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dashboard-content__product\" v-if=\"dashboardSelect == 2\">\r\n          <div\r\n            style=\"display: flex; width: 90%; justify-content: space-between\"\r\n          >\r\n            <div class=\"btn-search__product\"></div>\r\n            <div\r\n              class=\"btn-add__product\"\r\n              @click=\"displayModalAddProduct = true\"\r\n            >\r\n              + Add product\r\n            </div>\r\n            <div class=\"modal\" v-if=\"displayModalAddProduct\">\r\n              <div class=\"modal__container\">\r\n                <header class=\"modal__header\">\r\n                  <div></div>\r\n                  <div\r\n                    class=\"modal__btn-close\"\r\n                    @click=\"displayModalAddProduct = false\"\r\n                  >\r\n                    x\r\n                  </div>\r\n                </header>\r\n                <div class=\"modal__add-product\">\r\n                  <form>\r\n                    <h1 style=\"margin-top: 0px\">Thêm sản phẩm</h1>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Tên sản phẩm:</span>\r\n                      <input type=\"text\" v-model=\"newProduct.productName\" />\r\n                    </div>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Loại sản phẩm:</span>\r\n                      <select name=\"\" id=\"\" v-model=\"newProduct.category\">\r\n                        <option\r\n                          :value=\"type\"\r\n                          v-for=\"type in categories\"\r\n                          :key=\"type.id\"\r\n                        >\r\n                          {{ type.categoryName }}\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Giới tính:</span>\r\n                      <input type=\"text\" v-model=\"newProduct.gender\" />\r\n                    </div>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Giá sản phẩm:</span>\r\n                      <input type=\"number\" v-model=\"newProduct.price\" />\r\n                    </div>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Mô tả sản phẩm:</span>\r\n                      <input type=\"text\" v-model=\"newProduct.description\" />\r\n                    </div>\r\n                    <div class=\"modal__add-item\">\r\n                      <span>Ảnh sản phẩm:</span>\r\n                      <input\r\n                        type=\"file\"\r\n                        @change=\"inputImage1\"\r\n                        accept=\"image/gif, image/jpeg, image/png\"\r\n                        style=\"width: 160px\"\r\n                      />\r\n                      <input\r\n                        type=\"file\"\r\n                        @change=\"inputImage2\"\r\n                        accept=\"image/gif, image/jpeg, image/png\"\r\n                        style=\"width: 160px\"\r\n                      />\r\n                      <input\r\n                        type=\"file\"\r\n                        @change=\"inputImage3\"\r\n                        accept=\"image/gif, image/jpeg, image/png\"\r\n                        style=\"width: 160px\"\r\n                      />\r\n                    </div>\r\n                  </form>\r\n                  <button @click=\"createProduct\" class=\"btn__modal-add\">\r\n                    Thêm\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"product-table\">\r\n            <table border=\"1\">\r\n              <thead style=\"height: 40px\">\r\n                <td style=\"width: 40px\">ID</td>\r\n                <td>IMAGE</td>\r\n                <td style=\"width: 250px\">NAME</td>\r\n                <td style=\"width: 200px\">CATEGORY</td>\r\n                <td style=\"width: 120px\">PRICE</td>\r\n                <td style=\"width: 400px\">DESCRIPTION</td>\r\n                <td style=\"width: 170px\">DISCOUNT(%)</td>\r\n                <td style=\"width: 150px\">OPTION</td>\r\n              </thead>\r\n              <tr v-for=\"product in products.content\" :key=\"product.id\">\r\n                <td>{{ product.id }}</td>\r\n                <td>\r\n                  <img\r\n                    :src=\"urlbe + '/file/' + product.imageEntities[0].imgURL\"\r\n                    alt=\"\"\r\n                    class=\"product-img\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <textarea\r\n                    cols=\"1\"\r\n                    rows=\"1\"\r\n                    class=\"product-name\"\r\n                    v-model=\"product.productName\"\r\n                  >\r\n                  </textarea>\r\n                </td>\r\n                <td>\r\n                  <!-- {{ product.category.categoryName }} -->\r\n                  <select\r\n                    style=\"width: 100%\"\r\n                    name=\"\"\r\n                    id=\"\"\r\n                    v-model=\"product.category\"\r\n                  >\r\n                    <option\r\n                      :value=\"type\"\r\n                      v-for=\"type in categories\"\r\n                      :key=\"type.id\"\r\n                    >\r\n                      {{ type.categoryName }}\r\n                    </option>\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    v-model=\"product.price\"\r\n                    style=\"text-align: center; border: none\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <textarea\r\n                    cols=\"1\"\r\n                    rows=\"1\"\r\n                    class=\"product-name\"\r\n                    v-model=\"product.description\"\r\n                  >\r\n                  </textarea>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    v-model=\"product.discount\"\r\n                    style=\"text-align: center; border: none\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <div style=\"width: 100%\">\r\n                    <button class=\"btn-update\" @click=\"updateProduct(product)\">\r\n                      UPDATE\r\n                    </button>\r\n                    <button\r\n                      class=\"btn-update\"\r\n                      @click=\"deleteProduct(product.id)\"\r\n                    >\r\n                      DELETE\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n          <div class=\"v-pagination__container\">\r\n            <div class=\"pagination__left\"></div>\r\n            <div class=\"pagination__right\">\r\n              <div class=\"pagination\">\r\n                <div class=\"pagination__prev\" @click=\"changePage('prev')\">\r\n                  &lt;\r\n                </div>\r\n                <div\r\n                  v-for=\"(page, index) in pages\"\r\n                  :key=\"index\"\r\n                  class=\"pagination__item\"\r\n                  :class=\"{ 'pagination__item--active': page == pageNumber }\"\r\n                  @click=\"changePage(page)\"\r\n                >\r\n                  {{ page }}\r\n                </div>\r\n                <div class=\"pagination__after\" @click=\"changePage('after')\">\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dashboard-content__category\" v-if=\"dashboardSelect == 3\">\r\n          <div v-for=\"(type, idx) in categoriesType\" :key=\"idx\">\r\n            <div\r\n              v-if=\"displayCategory == 0\"\r\n              class=\"category-list\"\r\n              @click=\"categoryShow(idx + 1)\"\r\n            >\r\n              <div>{{ type.categoryType }}</div>\r\n              <div>Tổng: {{ categoryListLength[idx] }} Danh mục</div>\r\n            </div>\r\n\r\n            <div\r\n              v-if=\"displayCategory == idx + 1\"\r\n              style=\"position: absolute; left: 400px\"\r\n            >\r\n              <div class=\"category-table\">\r\n                <table border=\"1\">\r\n                  <thead style=\"height: 40px\">\r\n                    <td style=\"width: 40px\">ID</td>\r\n                    <td style=\"width: 150px\">CATEGORY TYPE</td>\r\n                    <td style=\"width: 300px\">CATEGORY NAME</td>\r\n                  </thead>\r\n                  <tr v-for=\"category in categoryList[idx]\" :key=\"category.id\">\r\n                    <td>{{ category.id }}</td>\r\n                    <td>{{ type.categoryType }}</td>\r\n                    <td>{{ category.categoryName }}</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n              <div style=\"display: flex; justify-content: space-between\">\r\n                <button\r\n                  class=\"btn-back\"\r\n                  @click=\"displayModalAddCategory = true\"\r\n                >\r\n                  Add cartegory\r\n                </button>\r\n                <button @click=\"displayCategory = 0\" class=\"btn-back\">\r\n                  Back\r\n                </button>\r\n              </div>\r\n              <div class=\"modal\" v-if=\"displayModalAddCategory\">\r\n                <div class=\"modal__container\">\r\n                  <header class=\"modal__header\">\r\n                    <div></div>\r\n                    <div\r\n                      class=\"modal__btn-close\"\r\n                      @click=\"displayModalAddCategory = false\"\r\n                    >\r\n                      x\r\n                    </div>\r\n                  </header>\r\n                  <div class=\"modal__add-product\">\r\n                    <form>\r\n                      <h1 style=\"margin-top: 0px\">Thêm danh mục</h1>\r\n                      <div class=\"modal__add-item\">\r\n                        <span>Tên danh mục:</span>\r\n                        <input type=\"text\" v-model=\"newCategory\" />\r\n                      </div>\r\n                    </form>\r\n                    <button\r\n                      @click=\"createCategory(type)\"\r\n                      class=\"btn__modal-add\"\r\n                    >\r\n                      Thêm\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dashboard-content__order\" v-if=\"dashboardSelect == 4\">\r\n          <div class=\"order-table\" style=\"\">\r\n            <table border=\"1\">\r\n              <thead style=\"height: 40px\">\r\n                <td style=\"width: 70px\">ID</td>\r\n                <td style=\"width: 200px\">USER FIRSTNAME</td>\r\n                <td style=\"width: 220px\">USER LASTNAME</td>\r\n                <td style=\"width: 180px\">TOTAL PRICE</td>\r\n                <td style=\"width: 180px\">ORDER DATE</td>\r\n                <td style=\"width: 170px\">STATUS</td>\r\n                <td style=\"width: 170px\">OPTION</td>\r\n              </thead>\r\n              <tr v-for=\"o in order.content\" :key=\"o.id\">\r\n                <td style=\"width: 70px; height: 40px\">{{ o.id }}</td>\r\n                <td style=\"width: 200px\">{{ o.userInfoEntity.firstName }}</td>\r\n                <td style=\"width: 220px\">{{ o.userInfoEntity.lastName }}</td>\r\n                <td style=\"width: 180px\">{{ o.totalPrice }}</td>\r\n                <td style=\"width: 170px\">{{ o.orderDate }}</td>\r\n                <td style=\"width: 180px\">{{ getStatus(o.hasProcess) }}</td>\r\n                <td style=\"width: 150px; padding: 5px\">\r\n                  <button\r\n                    @click=\"processOrder(o)\"\r\n                    v-if=\"!o.hasProcess\"\r\n                    style=\"width: 100%\"\r\n                  >\r\n                    Xử lý đơn hàng\r\n                  </button>\r\n                  <div v-if=\"o.hasProcess\">Đơn hàng đã được xử lý</div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n          <div class=\"v-pagination__container\">\r\n            <div class=\"pagination__left\"></div>\r\n            <div class=\"pagination__right\">\r\n              <div class=\"pagination\">\r\n                <div class=\"pagination__prev\" @click=\"changePage('prev')\">\r\n                  &lt;\r\n                </div>\r\n                <div\r\n                  v-for=\"(page, index) in pages\"\r\n                  :key=\"index\"\r\n                  class=\"pagination__item\"\r\n                  :class=\"{ 'pagination__item--active': page == pageNumber }\"\r\n                  @click=\"changePage(page)\"\r\n                >\r\n                  {{ page }}\r\n                </div>\r\n                <div class=\"pagination__after\" @click=\"changePage('after')\">\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dashboard-content__user\" v-if=\"dashboardSelect == 5\">\r\n          <div class=\"order-table\" style=\"\">\r\n            <table border=\"1\">\r\n              <thead style=\"height: 40px\">\r\n                <td style=\"width: 70px\">ID</td>\r\n                <td style=\"width: 250px\">USERNAME</td>\r\n                <td style=\"width: 400px\">EMAIL</td>\r\n                <td style=\"width: 200px\">PASSWORD</td>\r\n                <td style=\"width: 200px\">FRISTNAME</td>\r\n                <td style=\"width: 200px\">LASTNAME</td>\r\n                <td style=\"width: 170px\">PHONE</td>\r\n                <td style=\"width: 200px\">ADDRESS</td>\r\n                <td style=\"width: 200px\">ROLE</td>\r\n                <td style=\"width: 170px\">OPTION</td>\r\n              </thead>\r\n              <tr v-for=\"user in users.content\" :key=\"user.id\">\r\n                <td style=\"\">{{ user.id }}</td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.username\"\r\n                  />\r\n                </td>\r\n                <td style=\"width: 400px\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.email\"\r\n                  />\r\n                </td>\r\n                <td style=\"width: 300px; height: 50px\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.password\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.firstName\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.lastName\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.phone\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.address\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <input\r\n                    type=\"text\"\r\n                    style=\"border: none\"\r\n                    v-model=\"user.roles\"\r\n                  />\r\n                </td>\r\n                <td style=\"\">\r\n                  <button @click=\"updateUser(user)\">Update</button>\r\n                  <button @click=\"deleteUser(user.id)\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n\r\n          <div class=\"v-pagination__container\">\r\n            <div class=\"pagination__left\"></div>\r\n            <div class=\"pagination__right\">\r\n              <div class=\"pagination\">\r\n                <div class=\"pagination__prev\" @click=\"changePage('prev')\">\r\n                  &lt;\r\n                </div>\r\n                <div\r\n                  v-for=\"(page, index) in pages\"\r\n                  :key=\"index\"\r\n                  class=\"pagination__item\"\r\n                  :class=\"{ 'pagination__item--active': page == pageNumber }\"\r\n                  @click=\"changePage(page)\"\r\n                >\r\n                  {{ page }}\r\n                </div>\r\n                <div class=\"pagination__after\" @click=\"changePage('after')\">\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { Bar } from \"vue-chartjs\";\r\nimport {\r\n  Chart as ChartJS,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n} from \"chart.js\";\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale\r\n);\r\n\r\nexport default {\r\n  components: { Bar },\r\n  data() {\r\n    return {\r\n      chartDataa: {\r\n        labels: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"Mar\",\r\n          \"Apr\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"Aug\",\r\n          \"Sept\",\r\n          \"Oct\",\r\n          \"Nov\",\r\n          \"Dec\",\r\n        ],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n          },\r\n        ],\r\n      },\r\n      chartOptionss: {\r\n        responsive: true,\r\n      },\r\n\r\n      dashboardSelect: 1,\r\n\r\n      url: \"\",\r\n      search: \"\",\r\n      gender: \"\",\r\n      categorytype: 0,\r\n      category: 0,\r\n      type: \"\",\r\n      userRateFilter: 0,\r\n      priceGT: 0,\r\n      priceLT: 0,\r\n      typeSort: \"id\",\r\n      isSort: \"asc\",\r\n      totalItem: 0,\r\n      totalPage: 0,\r\n      pageNumber: 1,\r\n      limit: 12,\r\n\r\n      products: [],\r\n      displayModalAddProduct: false,\r\n      newProduct: {\r\n        productName: \"\",\r\n        category: {},\r\n        price: 0,\r\n        description: \"\",\r\n        gender: \"\",\r\n      },\r\n      imgProduct1: null,\r\n      imgProduct2: null,\r\n      imgProduct3x: null,\r\n\r\n      categories: [],\r\n      categoriesType: [\r\n        {\r\n          id: 1,\r\n          categoryType: \"Áo\",\r\n        },\r\n        {\r\n          id: 2,\r\n          categoryType: \"Quần\",\r\n        },\r\n        {\r\n          id: 3,\r\n          categoryType: \"Váy\",\r\n        },\r\n        {\r\n          id: 4,\r\n          categoryType: \"Phụ kiện\",\r\n        },\r\n      ],\r\n      displayCategory: 0,\r\n      categoryList: [],\r\n      categoryListLength: [],\r\n      displayModalAddCategory: false,\r\n      newCategory: \"\",\r\n\r\n      order: [],\r\n      totalPrice: 0,\r\n      totalByMonth: [],\r\n      updateChart: false,\r\n      currentYear: new Date().getFullYear(),\r\n\r\n      users: [],\r\n    };\r\n  },\r\n\r\n  props: [\"islogin\", \"isAdmin\", \"user\", \"urlbe\"],\r\n\r\n  methods: {\r\n    logout() {\r\n      localStorage.removeItem(\"token\");\r\n        var currentURL = window.location.href;\r\n        var baseURL = currentURL.replace('/admin', '/login');\r\n        window.location.replace(baseURL);\r\n    },\r\n\r\n    formatPrice(number) {\r\n      return new Intl.NumberFormat(\"vi-VN\", {\r\n        style: \"currency\",\r\n        currency: \"VND\",\r\n      }).format(number);\r\n    },\r\n\r\n    inputImage1(event) {\r\n      this.imgProduct1 = event.target.files[0];\r\n    },\r\n\r\n    inputImage2(event) {\r\n      this.imgProduct2 = event.target.files[0];\r\n    },\r\n\r\n    inputImage3(event) {\r\n      this.imgProduct3 = event.target.files[0];\r\n    },\r\n\r\n    async upLoadFile(imgProduct, pid) {\r\n      let formdata = new FormData();\r\n      formdata.append(\"file\", imgProduct);\r\n      formdata.append(\"pid\", pid);\r\n      try {\r\n        const response = await axios.post(\r\n          this.urlbe + \"/file/upload\",\r\n          formdata,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async createProduct() {\r\n      if (\r\n        this.newProduct.productName != null &&\r\n        this.newProduct.category != null &&\r\n        this.newProduct.price != null &&\r\n        this.newProduct.description != null &&\r\n        this.newProduct.gender != null &&\r\n        this.imgProduct1 != null &&\r\n        this.imgProduct2 != null &&\r\n        this.imgProduct3 != null\r\n      ) {\r\n        try {\r\n          const response = await axios.post(\r\n            this.urlbe + \"/product/create\",\r\n            {\r\n              productName: this.newProduct.productName,\r\n              category: this.newProduct.category,\r\n              price: this.newProduct.price,\r\n              description: this.newProduct.description,\r\n              gender: this.newProduct.gender,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n\r\n          this.upLoadFile(this.imgProduct1, response.data.id);\r\n          this.upLoadFile(this.imgProduct2, response.data.id);\r\n          this.upLoadFile(this.imgProduct3, response.data.id);\r\n\r\n          alert(\"Thêm sản phẩm thành công\");\r\n          this.getListProduct();\r\n          this.displayModalAddProduct = false;\r\n          return response;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      } else {\r\n        alert(\"Vui lòng nhập đầy đủ thông tin\");\r\n      }\r\n    },\r\n\r\n    async getListProduct() {\r\n      try {\r\n        const response = await axios.get(\r\n          this.url +\r\n            \"search=\" +\r\n            this.search +\r\n            \"&gender=\" +\r\n            this.gender +\r\n            \"&categorytype=\" +\r\n            this.categorytype +\r\n            \"&category=\" +\r\n            this.category +\r\n            \"&type=\" +\r\n            this.type +\r\n            \"&rate=\" +\r\n            this.userRateFilter +\r\n            \"&pricegt=\" +\r\n            this.priceGT +\r\n            \"&pricelt=\" +\r\n            this.priceLT +\r\n            \"&limit=\" +\r\n            this.limit +\r\n            \"&page=\" +\r\n            this.pageNumber +\r\n            \"&sortby=\" +\r\n            this.typeSort +\r\n            \"&sort=\" +\r\n            this.isSort\r\n        );\r\n        this.products = response.data;\r\n        this.totalPage = response.data.totalPages;\r\n        this.totalItem = response.data.totalElements;\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async updateProduct(product) {\r\n      try {\r\n        const response = await axios.put(\r\n          this.urlbe + \"/product/update/\" + product.id,\r\n          {\r\n            productName: product.productName,\r\n            category: product.category,\r\n            price: product.price,\r\n            description: product.description,\r\n            discount: product.discount,\r\n            gender: product.gender,\r\n            typeProductEntities: product.typeProductEntities,\r\n            imageEntities: product.imageEntities,\r\n            rate: product.rate,\r\n            numEvaluate: product.numEvaluate,\r\n            numOrder: product.numOrder\r\n          },\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        alert(\"Cập nhật sản phẩm thành công\");\r\n        this.getListProduct();\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async deleteProduct(id) {\r\n      try {\r\n        const response = await axios.delete(\r\n          this.urlbe + \"/product/delete/\" + id,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        alert(\"Xóa sản phẩm thành công\");\r\n        this.getListProduct();\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async getListCategory(type) {\r\n      try {\r\n        const response = await axios.get(\r\n          this.urlbe + \"/category/list?type=\" + type + \"&limit=100&page=1\"\r\n        );\r\n        return response.data.content;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async createCategory(type) {\r\n      if (this.newCategory != \"\") {\r\n        try {\r\n          const response = await axios.post(\r\n            this.urlbe + \"/category/create\",\r\n            {\r\n              categoryName: this.newCategory,\r\n              categoryType: type,\r\n            },\r\n            {\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n\r\n          alert(\"Thêm danh mục thành công\");\r\n          this.categoryList[type.id - 1] = await this.getListCategory(type.id);\r\n          this.displayModalAddCategory = false;\r\n          return response;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      } else {\r\n        alert(\"Vui lòng nhập đầy đủ thông tin\");\r\n      }\r\n    },\r\n\r\n    categoryShow(idx) {\r\n      this.displayCategory = idx;\r\n      console.log(this.displayCategory);\r\n    },\r\n\r\n    async getListOrder() {\r\n      // try {\r\n      //   const response = await axios.get(\r\n      //     this.urlbe + \"/order/list/\" +\r\n      //       this.user.id +\r\n      //       \"?limit=1&page=\" +\r\n      //       this.pageNumber +\r\n      //       \"&sortby=id&sort=desc\",\r\n      //     {\r\n      //       headers: {\r\n      //         \"Access-Control-Allow-Origin\": \"*\",\r\n      //         Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n      //       },\r\n      //     }\r\n      //   );\r\n      //   // this.order = response.data;\r\n      //   this.totalPage = this.order.totalPages;\r\n      //   return this.user;\r\n      // } catch (error) {\r\n      //   console.error(error);\r\n      //   alert(\"Lỗi lấy danh sách đơn hàng\");\r\n      // }\r\n    },\r\n\r\n    async getListAllOrder() {\r\n      try {\r\n        const response = await axios.get(\r\n          this.url +\r\n            \"limit=\" +\r\n            this.limit +\r\n            \"&page=\" +\r\n            this.pageNumber +\r\n            \"&sortby=\" +\r\n            this.typeSort +\r\n            \"&sort=\" +\r\n            this.isSort,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        this.order = response.data;\r\n        this.totalPage = response.data.totalPages;\r\n        this.totalItem = response.data.totalElements;\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    getStatus(status) {\r\n      if (status == true) {\r\n        return \"Đã được xử lý\";\r\n      }\r\n      return \"Chưa được xử lý\";\r\n    },\r\n\r\n    async processOrder(order) {\r\n      order.hasProcess = true;\r\n      console.log(order);\r\n      try {\r\n        const response = await axios.put(\r\n          this.urlbe + \"/order/update/\" + order.id,\r\n          {\r\n            userInfoEntity: order.userInfoEntity,\r\n            orderDate: order.orderDate,\r\n            totalPrice: order.totalPrice,\r\n            hasProcess: order.hasProcess,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        const response2 = await axios.post(\r\n          this.urlbe + \"/mail/success/\" + order.id,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        alert(\"xử lý đơn hàng thành công\");\r\n        this.getListAllOrder();\r\n        console.log(response2);\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async getToTalPrice() {\r\n      try {\r\n        const response = await axios.get(this.urlbe + \"/order/total\", {\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n        });\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async getToTalByMonth(fromDate, toDate) {\r\n      try {\r\n        const response = await axios.get(\r\n          this.urlbe + \"/order/listdate?from=\" + fromDate + \"&to=\" + toDate,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        let totalprice = 0;\r\n        for (let i = 0; i < response.data.length; i++) {\r\n          totalprice += response.data[i].totalPrice;\r\n        }\r\n        return totalprice;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async getListUser() {\r\n      try {\r\n        const response = await axios.get(\r\n          this.url +\r\n            \"limit=\" +\r\n            this.limit +\r\n            \"&page=\" +\r\n            this.pageNumber +\r\n            \"&sortby=\" +\r\n            this.typeSort +\r\n            \"&sort=\" +\r\n            this.isSort,\r\n          {\r\n            headers: {\r\n              \"Access-Control-Allow-Origin\": \"*\",\r\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n            },\r\n          }\r\n        );\r\n        this.users = response.data;\r\n        this.totalPage = response.data.totalPages;\r\n        this.totalItem = response.data.totalElements;\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async updateUser(user) {\r\n      if (\r\n        user.firstName != \"\" &&\r\n        user.lastName != \"\" &&\r\n        user.email != \"\" &&\r\n        user.phone != \"\" &&\r\n        user.address != \"\" &&\r\n        user.password != \"\"\r\n      ) {\r\n        try {\r\n          const response = await axios.put(\r\n            this.urlbe + \"/user/update/\" + user.id,\r\n            {\r\n              username: user.username,\r\n              password: user.password,\r\n              roles: user.roles,\r\n              firstName: user.firstName,\r\n              lastName: user.lastName,\r\n              phone: user.phone,\r\n              email: user.email,\r\n              address: user.address,\r\n              avatarUrl: user.avatarUrl,\r\n              userInfoEntity: {\r\n                id: user.userInfoEntity.id,\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                avatarUrl: user.avatarUrl,\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n              },\r\n            }\r\n          );\r\n          alert(\"Cập nhật thông tin thành công\");\r\n          return response;\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    },\r\n\r\n    async deleteUser(id) {\r\n      try {\r\n        const response = await axios.delete(this.urlbe + \"/user/delete/\" + id, {\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n        });\r\n        alert(\"Xóa user thành công\");\r\n        this.getListUser();\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async getChart() {\r\n      this.totalByMonth[0] = await this.getToTalByMonth(\r\n        this.currentYear + \"-01-01\",\r\n        this.currentYear + \"-01-31\"\r\n      );\r\n      this.totalByMonth[1] = await this.getToTalByMonth(\r\n        this.currentYear + \"-02-01\",\r\n        this.currentYear + \"-02-29\"\r\n      );\r\n      this.totalByMonth[2] = await this.getToTalByMonth(\r\n        this.currentYear + \"-03-01\",\r\n        this.currentYear + \"-03-31\"\r\n      );\r\n      this.totalByMonth[3] = await this.getToTalByMonth(\r\n        this.currentYear + \"-04-01\",\r\n        this.currentYear + \"-04-30\"\r\n      );\r\n      this.totalByMonth[4] = await this.getToTalByMonth(\r\n        this.currentYear + \"-05-01\",\r\n        this.currentYear + \"-05-31\"\r\n      );\r\n      this.totalByMonth[5] = await this.getToTalByMonth(\r\n        this.currentYear + \"-06-01\",\r\n        this.currentYear + \"-06-30\"\r\n      );\r\n      this.totalByMonth[6] = await this.getToTalByMonth(\r\n        this.currentYear + \"-07-01\",\r\n        this.currentYear + \"-07-31\"\r\n      );\r\n      this.totalByMonth[7] = await this.getToTalByMonth(\r\n        this.currentYear + \"-08-01\",\r\n        this.currentYear + \"-08-31\"\r\n      );\r\n      this.totalByMonth[8] = await this.getToTalByMonth(\r\n        this.currentYear + \"-09-01\",\r\n        this.currentYear + \"-09-30\"\r\n      );\r\n      this.totalByMonth[9] = await this.getToTalByMonth(\r\n        this.currentYear + \"-10-01\",\r\n        this.currentYear + \"-10-31\"\r\n      );\r\n      this.totalByMonth[10] = await this.getToTalByMonth(\r\n        this.currentYear + \"-11-01\",\r\n        this.currentYear + \"-11-30\"\r\n      );\r\n      this.totalByMonth[11] = await this.getToTalByMonth(\r\n        this.currentYear + \"-12-01\",\r\n        this.currentYear + \"-12-31\"\r\n      );\r\n      console.log(this.totalByMonth);\r\n      this.chartDataa.datasets[0].data = this.totalByMonth;\r\n      this.updateChart = true;\r\n      console.log(this.updateChart);\r\n    },\r\n\r\n    goToUser() {\r\n      this.$router.push('/user')\r\n    },\r\n\r\n    changePage(page) {\r\n      if (page == \"prev\" && this.pageNumber > 1) {\r\n        this.pageNumber--;\r\n      } else if (page == \"after\" && this.pageNumber < this.totalPage) {\r\n        this.pageNumber++;\r\n      } else if (typeof page == \"number\") {\r\n        this.pageNumber = page;\r\n      }\r\n      if (this.dashboardSelect == 2) {\r\n        this.getListProduct();\r\n      } else if (this.dashboardSelect == 4) {\r\n        this.getListAllOrder();\r\n      } else if (this.dashboardSelect == 5) {\r\n        this.getListUser();\r\n      }\r\n    },\r\n\r\n    dashboardItemSelect(num, url) {\r\n      this.dashboardSelect = num;\r\n      this.url = url;\r\n      this.pageNumber = 1;\r\n      console.log(this.url);\r\n      if (num == 2) {\r\n        this.getListProduct();\r\n      } else if (num == 4) {\r\n        this.getListAllOrder();\r\n      } else if (num == 5) {\r\n        this.getListUser();\r\n      }\r\n    },\r\n  },\r\n\r\n  async created() {\r\n    if (!this.isAdmin || !this.islogin) {\r\n      this.$router.push(\"/404\");\r\n    } else {\r\n      this.url = this.urlbe + \"/user/list?\";\r\n      this.users = await this.getListUser();\r\n      this.categories = await this.getListCategory(0);\r\n      this.url = this.urlbe + \"/product/list?\";\r\n      this.products = this.getListProduct();\r\n      this.url = this.urlbe + \"/order/list?\";\r\n      this.order = await this.getListAllOrder();\r\n      this.url = \"\";\r\n\r\n      this.categoryList[0] = await this.getListCategory(1);\r\n      this.categoryList[1] = await this.getListCategory(2);\r\n      this.categoryList[2] = await this.getListCategory(3);\r\n      this.categoryList[3] = await this.getListCategory(4);\r\n      for (let i = 0; i < this.categoryList.length; i++) {\r\n        this.categoryListLength[i] = this.categoryList[i].length;\r\n      }\r\n\r\n      this.totalPrice = await this.getToTalPrice();\r\n\r\n      \r\n    }\r\n  },\r\n\r\n  computed: {\r\n    pages() {\r\n      let pages = [];\r\n      for (let i = 1; i <= this.totalPage; i++) {\r\n        if (\r\n          i == 1 ||\r\n          i == this.totalPage ||\r\n          Math.abs(i - this.pageNumber) <= 1\r\n        ) {\r\n          pages.push(i);\r\n        } else if (Math.abs(i - this.pageNumber) == 3) {\r\n          pages.push(\"...\");\r\n        }\r\n      }\r\n      return pages;\r\n    },\r\n\r\n    chartData() {\r\n      return this.chartDataa; /* mutable chart data */\r\n    },\r\n    chartOptions() {\r\n      return this.chartOptionss; /* mutable chart options */\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-container {\r\n  /* max-width: 1440px; */\r\n  margin: 0 auto;\r\n  margin-top: 70px;\r\n  padding: 20px;\r\n}\r\n\r\n.order {\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n}\r\n\r\n.list-order h2 {\r\n  text-align: left;\r\n  margin-left: 30px;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.display-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.underline {\r\n  border-bottom: 1px solid #cccccc;\r\n  padding-bottom: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.cart-item {\r\n  width: 100%;\r\n  height: 150px;\r\n  /* background: #c0392b; */\r\n  border-radius: 20px;\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.cart-item h2 {\r\n  line-height: 150px;\r\n  margin: 0px;\r\n}\r\n\r\n.cart-item h3 {\r\n  line-height: 150px;\r\n}\r\n\r\n.item-img {\r\n  width: 120px;\r\n  height: 120px;\r\n  border: 3px solid #cccccc;\r\n  border-radius: 100px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.v-pagination__container {\r\n  width: 90%;\r\n  margin-top: 25px;\r\n  margin-bottom: 25px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n}\r\n\r\n.pagination__prev,\r\n.pagination__after,\r\n.pagination__item {\r\n  width: 40px;\r\n  height: 40px;\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n  line-height: 40px;\r\n  border: 1px solid #c0c0c0;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination__prev,\r\n.pagination__after,\r\n.pagination__item:hover {\r\n  background-color: #c0c0c0;\r\n}\r\n\r\n.pagination__item--active {\r\n  box-sizing: border-box;\r\n  border: 3px solid #42b983;\r\n  line-height: 36px;\r\n}\r\n\r\n.logout {\r\n  padding: 8px 16px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  color: #000;\r\n  margin: 15px;\r\n}\r\n\r\n.logout:hover {\r\n  background-color: #42b9ad;\r\n  color: #fff;\r\n}\r\n\r\n.grid {\r\n  width: 100%;\r\n  /* max-width: 1440px; */\r\n  max-height: 100%;\r\n  margin: 0 auto;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.dashboard {\r\n  width: 25%;\r\n  height: 700px;\r\n  background-color: #42b983;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.dashboard-avt {\r\n  font-size: 30px;\r\n  height: 150px;\r\n  line-height: 150px;\r\n  font-weight: 500;\r\n  color: #fff;\r\n  cursor: pointer;\r\n}\r\n\r\n.dashboard-item {\r\n  width: 100%;\r\n  height: 70px;\r\n  background-color: #42b983;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top: 1px solid #c0c0c0;\r\n  font-size: 20px;\r\n  color: #fff;\r\n}\r\n\r\n.dashboard-item:hover {\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dashboard-item__active {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dashboard-content {\r\n  width: 75%;\r\n  height: 700px;\r\n  background-color: #fff;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.dashboard-content h1 {\r\n  margin: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.dashboard-content__maneger {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.dashboard-content__list {\r\n  width: 90%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border: 1px solid #c0c0c0;\r\n}\r\n\r\n.dashboard-content__item {\r\n  width: 250px;\r\n  height: 100px;\r\n  background-color: #fff;\r\n  border: 1px solid #c0c0c0;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  margin: 20px;\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n}\r\n\r\n.dashboard-evaluate {\r\n  display: flex;\r\n  width: 90%;\r\n  height: 400px;\r\n  justify-content: space-between;\r\n}\r\n\r\n.sales {\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n  padding: 10px;\r\n  width: 300px;\r\n  height: 150px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  border: 1px solid #c0c0c0;\r\n  border-top: 10px solid #ee00ff;\r\n}\r\n\r\n.chart {\r\n  width: 80%;\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  border: 1px solid #c0c0c0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.dashboard-content__user,\r\n.dashboard-content__order,\r\n.dashboard-content__product {\r\n  display: flex;\r\n  align-content: center;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n}\r\n\r\n.btn-add__product {\r\n  width: 250px;\r\n  height: 50px;\r\n  background-color: #42b983;\r\n  margin-bottom: 20px;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  line-height: 50px;\r\n  border-radius: 20px;\r\n  border: 1px solid #000;\r\n}\r\n\r\n.modal__add-product {\r\n  width: 100%;\r\n  height: 600px;\r\n  padding: 50px;\r\n  background-color: #fff;\r\n}\r\n\r\n.modal__add-item {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.modal__add-item span {\r\n  width: 200px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  line-height: 40px;\r\n  text-align: start;\r\n}\r\n.modal__add-item select,\r\n.modal__add-item input {\r\n  width: 500px;\r\n  height: 40px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  line-height: 30px;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal__container {\r\n  width: 800px;\r\n  background-color: #fff;\r\n}\r\n\r\n.modal__header {\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: #42b983;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.modal__btn-close {\r\n  width: 50px;\r\n  height: 50px;\r\n  line-height: 50px;\r\n  font-size: 25px;\r\n  font-weight: 500;\r\n  border-left: 1px solid #c0c0c0;\r\n  color: #fff;\r\n}\r\n\r\n.modal__btn-close:hover {\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n}\r\n\r\n.btn-add__product:hover {\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.order-table {\r\n  width: 90%;\r\n  height: 450px;\r\n  border: 1px solid #000;\r\n  margin-bottom: 10px;\r\n  color: #000;\r\n  margin-top: 50px;\r\n  font-size: 17px;\r\n  font-weight: 300px;\r\n  overflow: auto;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.product-table {\r\n  width: 90%;\r\n  height: 450px;\r\n  border: 1px solid #000;\r\n  margin-bottom: 10px;\r\n  color: #000;\r\n  font-size: 17px;\r\n  font-weight: 300px;\r\n  overflow: auto;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.product-img {\r\n  width: 120px;\r\n  height: 150px;\r\n  background-color: #c0c0c0;\r\n}\r\n\r\n.product-name {\r\n  width: 100%;\r\n  height: 150px;\r\n  border: none;\r\n  padding: 5px;\r\n}\r\n\r\n.btn-update {\r\n  width: 80%;\r\n  height: 30px;\r\n  margin: 10px;\r\n  background-color: #fff;\r\n}\r\n\r\n.btn-update:hover {\r\n  cursor: pointer;\r\n  background-color: #42b983;\r\n  color: #fff;\r\n}\r\n\r\n.btn__modal-add {\r\n  width: 300px;\r\n  height: 50px;\r\n  margin: 10px;\r\n  background-color: #42b983;\r\n  border-radius: 20px;\r\n  color: #fff;\r\n  font-size: 20px;\r\n}\r\n\r\n.btn__modal-add:hover {\r\n  cursor: pointer;\r\n  opacity: 0.5;\r\n}\r\n\r\n.dashboard-content__category {\r\n  position: relative;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  padding: 50px;\r\n}\r\n\r\n.category-list {\r\n  width: 500px;\r\n  height: 200px;\r\n  background-color: #fff;\r\n  border: 2px solid #c0c0c0;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\r\n  border-left: 10px solid #01ffe6;\r\n  cursor: pointer;\r\n  margin: 20px;\r\n  font-size: 40px;\r\n  padding: 20px;\r\n}\r\n\r\n.category-list:hover {\r\n  opacity: 0.8;\r\n}\r\n\r\n.category-table {\r\n  width: 100%;\r\n  height: 450px;\r\n  border: 1px solid #000;\r\n  margin-bottom: 10px;\r\n  color: #000;\r\n  font-size: 17px;\r\n  font-weight: 300px;\r\n  overflow: auto;\r\n  overflow-y: scroll;\r\n}\r\n\r\n.btn-back {\r\n  width: 100px;\r\n  height: 50px;\r\n  background-color: #fff;\r\n  border: 1px solid #c0c0c0;\r\n  border-radius: 10px;\r\n  margin-bottom: 20px;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n}\r\n\r\n.btn__update-chart {\r\n  width: 200px;\r\n  /* height: 50px; */\r\n  font-size: 20px;\r\n  margin: 20px;\r\n  background-color: #fff;\r\n  /* border: 1px solid #000; */\r\n  border-radius: 10px;\r\n}\r\n\r\n.btn__update-chart:hover {\r\n  cursor: pointer;\r\n  /* background-color: #42b983; */\r\n  /* color: #fff; */\r\n}\r\n</style>\r\n\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n","import { render } from \"./AdminView.vue?vue&type=template&id=4640f800&scoped=true\"\nimport script from \"./AdminView.vue?vue&type=script&lang=js\"\nexport * from \"./AdminView.vue?vue&type=script&lang=js\"\n\nimport \"./AdminView.vue?vue&type=style&index=0&id=4640f800&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4640f800\"]])\n\nexport default __exports__"],"names":["class","src","_imports_0","alt","_createElementVNode","style","border","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","goToUser","$props","user","avatarUrl","urlbe","_hoisted_5","_toDisplayString","username","_normalizeClass","$data","dashboardSelect","$event","dashboardItemSelect","this","_createVNode","_component_font_awesome_icon","icon","logout","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","products","_hoisted_11","totalElements","_hoisted_12","categories","length","order","_hoisted_13","users","_hoisted_14","_hoisted_15","_hoisted_16","updateChart","_createBlock","_component_Bar","id","options","chartOptions","data","chartData","getChart","type","currentYear","_hoisted_17","_hoisted_18","formatPrice","totalPrice","_hoisted_19","_hoisted_20","_hoisted_21","displayModalAddProduct","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","newProduct","productName","_hoisted_30","_hoisted_31","name","category","_Fragment","_renderList","value","key","categoryName","_hoisted_32","_hoisted_33","_hoisted_34","gender","_hoisted_35","_hoisted_36","price","_hoisted_37","_hoisted_38","description","_hoisted_39","_hoisted_40","onChange","inputImage1","accept","inputImage2","inputImage3","createProduct","_hoisted_41","_hoisted_42","_hoisted_43","content","product","imageEntities","imgURL","cols","rows","_hoisted_45","_hoisted_47","_hoisted_49","discount","_hoisted_51","updateProduct","_hoisted_52","deleteProduct","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","changePage","pages","page","index","pageNumber","_hoisted_58","_hoisted_59","categoriesType","idx","displayCategory","categoryShow","categoryType","categoryListLength","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","categoryList","_hoisted_65","displayModalAddCategory","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","newCategory","createCategory","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","o","_hoisted_79","_hoisted_80","userInfoEntity","firstName","_hoisted_81","lastName","_hoisted_82","_hoisted_83","orderDate","_hoisted_84","getStatus","hasProcess","_hoisted_85","processOrder","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_100","email","_hoisted_102","password","_hoisted_104","_hoisted_106","_hoisted_108","phone","_hoisted_110","address","_hoisted_112","roles","_hoisted_114","updateUser","_hoisted_115","deleteUser","_hoisted_116","_hoisted_117","_hoisted_118","_hoisted_119","_hoisted_120","_hoisted_121","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","isNullOrUndef","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","meta","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","borderRadius","maxR","enableBorder","boundingRects","outer","inner","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineCap","lineJoin","lineDash","drawOptions","SQRT2","centerX","centerY","yBoxTop","xBoxLeft","textDirection","fontColor","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","previous","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","legend","afterEvent","ci","useBorderRadius","borderCapStyle","borderJoinStyle","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar","ChartJS","components","chartDataa","chartOptionss","url","search","categorytype","userRateFilter","priceGT","priceLT","typeSort","isSort","totalItem","totalPage","imgProduct1","imgProduct2","imgProduct3x","totalByMonth","getFullYear","methods","localStorage","removeItem","currentURL","location","href","baseURL","currency","files","imgProduct3","upLoadFile","imgProduct","pid","formdata","FormData","append","response","axios","post","headers","Authorization","getItem","alert","getListProduct","totalPages","put","typeProductEntities","rate","numEvaluate","numOrder","getListCategory","log","getListOrder","getListAllOrder","status","response2","getToTalPrice","getToTalByMonth","fromDate","toDate","totalprice","getListUser","$router","created","isAdmin","islogin","computed","__exports__"],"sourceRoot":""}